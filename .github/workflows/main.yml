name: CustomActionGetWorkflow
on: 
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:     
      - name: Build Test
        run: echo "Build Test"

  # test:
  #     name: Test
  #     needs: build
  #     runs-on: ubuntu-latest
  #     steps:
  #       - name: ServiceNow DevOps Sonar Scan Results
  #         uses: ServiceNow/servicenow-devops-sonar@dev
  #         with:
  #            instance-url: ${{ secrets.SN_INSTANCE_NAME }}
  #            tool-id: ${{ secrets.SN_ORCH_TOOL_ID }}
  #            devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
  #            context-github: ${{ toJSON(github) }}
  #            job-name: 'Test'
  #            sonar-host-url: 'https://sonarcloud.io'
  #            sonar-project-key: 'kiranlakhani20_First_repo'
        
  changeApproval:
    name: ServiceNow Change Approval
    runs-on: ubuntu-latest
    needs: build
    steps:     
      - name: ServiceNow Change Approval
        uses: ServiceNow/servicenow-devops-change@dev
        id: create
        with:
          # devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          # devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWD }}
          instance-url: ${{ secrets.SN_INSTANCE_NAME }}
          devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          tool-id: ${{ secrets.SN_ORCH_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNow Change Approval'
          change-request: >-
            { "setCloseCode":"true", "autoCloseChange":true, "attributes":{ "short_description":"Updating GitHub Runner with latest AMI.", "description":"Updating GitHub Runner with latest AMI.", "requested_by":{"name": "Abraham Lincoln"}, "assignment_group":{"name": "Change Management"}, "priority": "2", "justification":"Latest AMI is created monthly using Packer Image Factory; This image is shared within Mode 2 accounts. This change updates our awesome runners with the latest AMI.", "implementation_plan":"Update latest AMI in codes; Run workflow. Terraform updates the latest AMI to the Awesome runner Stack.", "backout_plan":"If this deployment fails, we can always roll back to the previous AMI.", "test_plan":"Launch a new runner and check for the AMI in AWS console", "comments": "This is a monthly activity.", "work_notes": "This Change is created via DevOps.", "start_date": "2024-03-19 22:44:59", "end_date": "2024-03-20 22:46:59" } }
          interval: '100'
          timeout: '3600'
          changeCreationTimeOut: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
