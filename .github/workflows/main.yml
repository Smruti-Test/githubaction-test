name: CustomActionGetWorkflow
on: 
  # Triggers the workflow on push or pull request events but only for the "main" branch
  # push:
  #   branches: [ "main" ]
  # pull_request:
  #   branches: [ "main" ]
  workflow_dispatch:

jobs:
  build:
    name: build
    runs-on: ubuntu-latest
    steps:     
      - name: Build Test
        run: echo "Build Test"
        
  changeApproval:
    name: ServiceNow Change Approval
    runs-on: ubuntu-latest
    needs: build
    steps:     
      - name: ServiceNow Change Approval
        uses: ServiceNow/servicenow-devops-change@dev
        id: create
        with:
          devops-integration-user-name: ${{ secrets.SN_DEVOPS_USER }}
          devops-integration-user-password: ${{ secrets.SN_DEVOPS_PASSWD }}
          instance-url: ${{ secrets.SN_INSTANCE_NAME }}
          # devops-integration-token: ${{ secrets.SN_DEVOPS_INTEGRATION_TOKEN }}
          tool-id: ${{ secrets.SN_ORCH_TOOL_ID }}
          context-github: ${{ toJSON(github) }}
          job-name: 'ServiceNow Change Approval'
          change-request: >-
            { "setCloseCode": "true", "attributes": { "short_description":
            "Automated Software Deployment", "description": "Automated Software
            Deployment.", "assignment_group":
            "a715cd759f2002002920bde8132e7018", "implementation_plan": "Software
            update is tested and results can be found in Test Summaries Tab.",
            "backout_plan": "When software fails in production, the previous
            software release will be re-deployed.", "test_plan": "Testing if the
            software was successfully deployed" } }
          interval: '100'
          timeout: '3600'
          abortOnChangeCreationFailure: true
          abortOnChangeStepTimeout: true
